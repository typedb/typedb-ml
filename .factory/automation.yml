#
# Copyright (C) 2022 Vaticle
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

config:
  version-candidate: VERSION
  dependencies:
    dependencies: [build]
    typedb-client-python: [build, release]

build:
  quality:
    dependency-analysis:
      image: vaticle-ubuntu-20.04
      command: |
        bazel run @vaticle_dependencies//factory/analysis:dependency-analysis
  correctness:
    build:
      image: vaticle-ubuntu-20.04
      command: |
        pyenv install -s 3.7.2
        pyenv global 3.7.2 system
        bazel build //...
        bazel run @vaticle_dependencies//tool/checkstyle:test-coverage
        bazel test $(bazel query 'kind(checkstyle_test, //...)') --test_output=errors
    test-markdown-link-health:
      image: vaticle-ubuntu-20.04
      command: |
        find . -name \*.md | xargs -L1 npx markdown-link-check@3.8.0 -v
    test-pytorch-geometric:
      image: vaticle-ubuntu-20.04
      timeout: "10m"
      command: |
        pyenv install -s 3.7.2
        pyenv global 3.7.2 system
        bazel test //typedb_ml/pytorch_geometric/... --test_output=streamed --spawn_strategy=standalone --action_env=PATH
    test-typedb:
      image: vaticle-ubuntu-20.04
      timeout: "10m"
      command: |
        pyenv install -s 3.7.2
        pyenv global 3.7.2 system
        bazel test //typedb_ml/typedb/... --test_output=streamed --spawn_strategy=standalone --action_env=PATH
    test-networkx:
      image: vaticle-ubuntu-20.04
      timeout: "10m"
      command: |
        pyenv install -s 3.7.2
        pyenv global 3.7.2 system
        bazel test //typedb_ml/networkx/... --test_output=streamed --spawn_strategy=standalone --action_env=PATH
    test-examples:
      image: vaticle-ubuntu-20.04
      timeout: "10m"
      command: |
        pyenv install -s 3.7.2
        pyenv global 3.7.2 system
        bazel test //examples/... --test_output=streamed --spawn_strategy=standalone --action_env=PATH
    test-end-to-end:
      image: vaticle-ubuntu-20.04
      timeout: "10m"
      command: |
        pyenv install -s 3.7.2
        pyenv global 3.7.2 system
        bazel test //tests/end_to_end:diagnosis --test_output=streamed --spawn_strategy=standalone --action_env=PATH
    deploy-pip-snapshot:
      image: vaticle-ubuntu-20.04
      dependencies: [build, test-pytorch-geometric, test-typedb, test-networkx, test-examples, test-end-to-end]
      command: |
        pyenv install -s 3.7.2
        pyenv global 3.7.2 system
        export DEPLOY_PIP_USERNAME=$REPO_VATICLE_USERNAME
        export DEPLOY_PIP_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run --define version=$(git rev-parse HEAD) //:deploy-pip -- snapshot
    test-deployment-pip:
      image: vaticle-ubuntu-20.04
      dependencies: [deploy-pip-snapshot]
      filter:
        owner: vaticle
        branch: master
      type: foreground
      command: |
        export PYENV_ROOT="/opt/pyenv"
        pyenv install -s 3.7.2
        pyenv global 3.7.2
        sudo unlink /usr/bin/python3
        sudo ln -s $(which python3) /usr/bin/python3
        sudo ln -s /usr/share/pyshared/lsb_release.py /opt/pyenv/versions/3.7.2/lib/python3.7/site-packages/lsb_release.py
        bazel run //tests/end_to_end:typedb-extractor-linux -- typedb-all-linux
        ./typedb-all-linux/typedb server &
        pip install -r requirements.txt
        pip install --extra-index-url https://repo.vaticle.com/repository/pypi-snapshot/simple typedb-ml==0.0.0-$FACTORY_COMMIT
        python -m examples.diagnosis.diagnosis "./typedb-all-linux" && export TEST_SUCCESS=0 ||
        export TEST_SUCCESS=1
        kill $(jps | awk '/TypeDBServer/ {print $1}')
        exit $TEST_SUCCESS
release:
  filter:
    owner: vaticle
    branch: master
  validation:
    validate-dependencies:
      image: vaticle-ubuntu-20.04
      command: bazel test //:release-validate-python-deps --test_output=streamed
  deployment:
    deploy-github:
      image: vaticle-ubuntu-20.04
      command: |
        export PYENV_ROOT="/opt/pyenv"
        pyenv install -s 3.7.2
        pyenv global 3.7.2
        sudo unlink /usr/bin/python3
        sudo ln -s $(which python3) /usr/bin/python3
        sudo ln -s /usr/share/pyshared/lsb_release.py /opt/pyenv/versions/3.7.2/lib/python3.7/site-packages/lsb_release.py
        python3 -m pip install certifi
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
        export NOTES_CREATE_TOKEN=$REPO_GITHUB_TOKEN
        export DEPLOY_GITHUB_TOKEN=$REPO_GITHUB_TOKEN
        bazel run --define version=$(cat VERSION) //:deploy-github -- $FACTORY_COMMIT
    #        TODO: Replace two lines above with these three when fixed:
    #        bazel run @vaticle_dependencies//tool/release/notes:create -- $FACTORY_OWNER $FACTORY_REPO $FACTORY_COMMIT $(cat VERSION) ./RELEASE_TEMPLATE.md
    #        export DEPLOY_GITHUB_TOKEN=$REPO_GITHUB_TOKEN
    #        bazel run --define version=$(cat VERSION) //:deploy-github -- $FACTORY_COMMIT
    deploy-pip-release:
      image: vaticle-ubuntu-20.04
      command: |
        export PYENV_ROOT="/opt/pyenv"
        pyenv install -s 3.7.2
        pyenv global 3.7.2
        sudo unlink /usr/bin/python3
        sudo ln -s $(which python3) /usr/bin/python3
        sudo ln -s /usr/share/pyshared/lsb_release.py /opt/pyenv/versions/3.7.2/lib/python3.7/site-packages/lsb_release.py
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
        export DEPLOY_PIP_USERNAME=$REPO_PYPI_USERNAME
        export DEPLOY_PIP_PASSWORD=$REPO_PYPI_PASSWORD
        bazel run --define version=$(cat VERSION) //:deploy-pip -- release
      dependencies: [deploy-github]
